generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  password      String
  role          Role          @default(CUSTOMER)
  clientId      String?
  active    Boolean  @default(true)  
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  projects      Project[]     @relation("AgentProjects")
  notesAuthored ProjectNote[] @relation("NoteAuthor")
  client        Client?       @relation(fields: [clientId], references: [id])

  @@index([clientId])
}

model Client {
  id         String    @id @default(cuid())
  name       String
  contact    String?
  phone      String?
  notes      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  customerNo String?   @unique
  projects   Project[]
  users      User[]

  @@index([name])
}

model Project {
  id        String          @id @default(cuid())
  title     String
  type      ProjectType     @default(WEBSITE)
  status    ProjectStatus   @default(WEBTERMIN)
  important String?
  clientId  String
  agentId   String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  agent     User?           @relation("AgentProjects", fields: [agentId], references: [id])
  client    Client          @relation(fields: [clientId], references: [id])
  notes     ProjectNote[]
  website   ProjectWebsite?

  @@index([clientId, status])
  @@index([agentId])
}

model ProjectWebsite {
  projectId         String           @id
  domain            String?
  priority          WebsitePriority  @default(NORMAL)
  pStatus           ProductionStatus @default(NONE)
  cms               CMS              @default(SHOPWARE)
  cmsOther          String?
  webDate           DateTime?
  demoDate          DateTime?
  onlineDate        DateTime?
  lastMaterialAt    DateTime?
  effortBuildMin    Int?
  effortDemoMin     Int?
  materialAvailable Boolean?
  seo               SEOStatus        @default(NONE)
  textit            TextitStatus     @default(NONE)
  accessible        Boolean?
  note              String?
  demoLink          String?
  project           Project          @relation(fields: [projectId], references: [id])
}

model ProjectNote {
  id        String   @id @default(cuid())
  projectId String
  authorId  String
  text      String
  createdAt DateTime @default(now())
  author    User     @relation("NoteAuthor", fields: [authorId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])

  @@index([projectId, createdAt])
}

enum Role {
  ADMIN
  AGENT
  CUSTOMER
}

enum ProjectType {
  WEBSITE
  FILM
  SOCIAL
}

enum ProjectStatus {
  NEW
  BRIEFING
  IN_PROGRESS
  ON_HOLD
  REVIEW
  DONE
}

enum WebsitePriority {
  LOW
  NORMAL
  HIGH
  CRITICAL
}

enum CMS {
  SHOPWARE
  WORDPRESS
  TYPO3
  JOOMLA
  WEBFLOW
  WIX
  CUSTOM
  OTHER
}

enum ProductionStatus {
  NONE
  TODO
  IN_PROGRESS
  WITH_CUSTOMER
  BLOCKED
  READY_FOR_LAUNCH
  DONE
}

enum SEOStatus {
  NONE
  QUESTIONNAIRE
  ANALYSIS
  DONE
}

enum TextitStatus {
  NONE
  SENT_OUT
  DONE
}

